(()=>{var u="http://localhost:3000";async function B(i,e="GET",t=null){let s={method:e,headers:{}};t!==null&&(s.headers["Content-Type"]="application/json",s.body=JSON.stringify(t));let a=await fetch(`${u}${i}`,s);if(!a.ok)throw new Error(await a.text());return a.status===204?null:a.json()}function m(i,e="GET",t=null){return B(i,e,t)}var w=()=>m("/api/threads","GET"),v=i=>m(`/api/threads/${encodeURIComponent(i)}`,"GET"),b=i=>m(`/api/threads/${encodeURIComponent(i)}`,"DELETE"),T=i=>m("/api/prompt","POST",i),E=(i,e,t)=>m(`/api/threads/${encodeURIComponent(i)}/messages/${encodeURIComponent(e)}`,"POST",t),_=(i,e)=>m(`/api/threads/${encodeURIComponent(i)}/messages/${encodeURIComponent(e)}`,"DELETE"),M=()=>m("/api/files","GET");window.__consoleHistory__=[];["log","info","warn","error"].forEach(i=>{let e=console[i];console[i]=(...t)=>{window.__consoleHistory__.push({level:i,timestamp:new Date().toISOString(),args:t.map(s=>typeof s=="string"?s:JSON.stringify(s))}),window.__consoleHistory__.length>100&&window.__consoleHistory__.shift(),e.apply(console,t)}});function S(i=[]){return i.map(e=>e.text?typeof e.text=="string"?e.text:typeof e.text.value=="string"?e.text.value:"":"").join(`
`)}var k=document.createElement("template");k.innerHTML=`
  <div class="gpt-container">
    <div class="thread-sidebar">
      <div class="sidebar-header">
        <span>Chats</span>
        <button class="new-chat-btn" title="New Chat">\uFF0B</button>
      </div>
      <input
        class="thread-name-sidebar"
        type="text"
        placeholder="Conversation title\u2026"
      />
      <ul class="thread-list"></ul>
      <button type="button" class="reset-project-btn">Reset Project</button>
    </div>
    <div class="chat-main">
      <div class="gpt-chat-header">
        <h2 class="chat-title">\u2190 Select or create a chat</h2>
        <button class="delete-chat-btn" title="Delete Chat">\u{1F5D1}\uFE0F</button>
        <button class="view-files-btn">View Files</button>
      </div>
      <div class="gpt-chat-messages"></div>
      <form class="gpt-chat-form">
        <input type="text" placeholder="Type your message\u2026" autocomplete="off"/>
        <button type="submit">Send</button>
        <button type="button" class="cancel-btn" disabled>Cancel</button>
      </form>
    </div>
  </div>
`;var y=class extends HTMLElement{constructor(){super(),this._init=!1,this.currentThreadId=null,this.threads=[]}connectedCallback(){this._init||(this._init=!0,this.append(k.content.cloneNode(!0)),this.threadList=this.querySelector(".thread-list"),this.newChatBtn=this.querySelector(".new-chat-btn"),this.threadNameSidebar=this.querySelector(".thread-name-sidebar"),this.chatTitleEl=this.querySelector(".chat-title"),this.deleteChatBtn=this.querySelector(".delete-chat-btn"),this.viewFilesBtn=this.querySelector(".view-files-btn"),this.chatMessages=this.querySelector(".gpt-chat-messages"),this.form=this.querySelector(".gpt-chat-form"),this.input=this.form.querySelector("input"),this.sendBtn=this.form.querySelector('button[type="submit"]'),this.cancelBtn=this.form.querySelector(".cancel-btn"),this.resetProjectBtn=this.querySelector(".reset-project-btn"),this.abortController=null,this.threadNameSidebar.style.display="none",this._ensureConfirmModal(),this.newChatBtn.addEventListener("click",()=>this._createNewThread()),this.deleteChatBtn.addEventListener("click",()=>this._deleteCurrentThread()),this.viewFilesBtn.addEventListener("click",()=>this._showFileTree()),this.form.addEventListener("submit",e=>{e.preventDefault(),this.sendMessage(this.input.value)}),this.cancelBtn.addEventListener("click",async()=>{this.abortController&&(this.abortController.abort(),this.cancelBtn.disabled=!0,await fetch(`${u}/api/threads/${this.currentThreadId}/cancel`,{method:"POST",headers:{"Content-Type":"application/json"}}))}),this.resetProjectBtn.addEventListener("click",async()=>{if(await this._confirm("Are you sure? This will wipe and restore default project files."))try{let t=await fetch(`${u}/api/reset_project`,{method:"POST"});if(!t.ok)throw new Error(`Status ${t.status}`);await this._confirm("Project has been reset to defaults.")}catch(t){await this._confirm("Failed to reset project: "+t.message)}}),this._loadThreads(),this.es=new EventSource(u+"/events"),this.es.addEventListener("console",e=>{let{id:t}=JSON.parse(e.data);fetch(u+"/api/console_history",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,history:window.__consoleHistory__})})}))}_updateControls(){this.deleteChatBtn.disabled=!this.currentThreadId}async _loadThreads(){try{this.threads=await w(),this.threads.sort((e,t)=>e.title.localeCompare(t.title)),this._renderThreadList(),this.threads.length?await this._selectThread(this.threads[0].id):this._createNewThread()}catch(e){console.error(e)}}_updateThreadNameSidebarVisibility(){this.threadNameSidebar.style.display=this.currentThreadId===null?"block":"none"}_renderThreadList(){this.threadList.innerHTML="",this.threads.forEach(({id:e,title:t})=>{let s=document.createElement("li");s.dataset.id=e,s.classList.toggle("selected",e===this.currentThreadId);let a=document.createElement("span");a.className="thread-item-label",a.textContent=t||e,a.addEventListener("click",()=>this._selectThread(e));let r=document.createElement("button");r.className="delete-thread-btn",r.textContent="\u{1F5D1}\uFE0F",r.addEventListener("click",async o=>{o.stopPropagation(),await this._confirm("Delete this chat?")&&(await b(e),this.threads=this.threads.filter(n=>n.id!==e),this.currentThreadId===e&&(this.currentThreadId=null,this.clearChat(),this.chatTitleEl.textContent="New Chat",this._updateThreadNameSidebarVisibility(),this._updateControls()),this._renderThreadList())}),s.append(a,r),this.threadList.append(s)})}async _deleteCurrentThread(){this.currentThreadId&&await this._confirm("Delete this entire chat?")&&(await b(this.currentThreadId),this.threads=this.threads.filter(e=>e.id!==this.currentThreadId),this.currentThreadId=null,this.clearChat(),this.chatTitleEl.textContent="New Chat",this._renderThreadList(),this._updateThreadNameSidebarVisibility(),this._updateControls())}async _createNewThread(){this.currentThreadId=null,this.clearChat(),this.threadNameSidebar.value="",this._renderThreadList(),this._updateThreadNameSidebarVisibility(),this.chatTitleEl.textContent="New Chat",this._updateControls(),setTimeout(()=>this.threadNameSidebar.focus(),0)}async _selectThread(e){this.currentThreadId=e,this._renderThreadList(),this._updateThreadNameSidebarVisibility(),this._updateControls(),this._ensureEditModal();try{let{title:t,messages:s}=await v(e);this.chatTitleEl.textContent=t||"Untitled Chat",this.clearChat(),(s||[]).sort((a,r)=>a.created_at-r.created_at).forEach(a=>{let r=new Date(a.created_at*1e3).toLocaleString(),o=S(a.content),{wrap:n}=this.appendMessage(a.role,o,r);n.dataset.msgId=a.id}),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}catch(t){console.error(t)}}clearChat(){this.chatMessages.innerHTML=""}_ensureConfirmModal(){if(document.getElementById("confirmModal"))return;let e=document.createElement("div");e.id="confirmModal",e.innerHTML=`
      <div class="modal-content">
        <p class="modal-message"></p>
        <div class="modal-buttons">
          <button class="btn-cancel">Cancel</button>
          <button class="btn-ok">OK</button>
        </div>
      </div>
    `,e.addEventListener("click",t=>{t.target===e&&e.classList.remove("visible")}),e.querySelector(".btn-cancel").addEventListener("click",()=>{e._resolve(!1),e.classList.remove("visible")}),e.querySelector(".btn-ok").addEventListener("click",()=>{e._resolve(!0),e.classList.remove("visible")}),document.body.appendChild(e)}_confirm(e){let t=document.getElementById("confirmModal");return t.querySelector(".modal-message").textContent=e,t.classList.add("visible"),new Promise(s=>t._resolve=s)}_ensureEditModal(){let e=document.getElementById("editModal");if(e)return e;e=document.createElement("div"),e.id="editModal",e.innerHTML=`
      <div class="modal-content">
        <textarea class="modal-textarea"></textarea>
        <div class="modal-buttons">
          <button class="btn-cancel">Cancel</button>
          <button class="btn-ok">OK</button>
        </div>
      </div>
    `,e.addEventListener("click",s=>{s.target===e&&e.classList.remove("visible")});let t=e.querySelector(".modal-textarea");return e.querySelector(".btn-cancel").addEventListener("click",()=>{e._resolve(null),e.classList.remove("visible")}),e.querySelector(".btn-ok").addEventListener("click",()=>{e._resolve(t.value),e.classList.remove("visible")}),document.body.appendChild(e),e}_edit(e=""){let t=document.getElementById("editModal")||this._ensureEditModal(),s=t.querySelector(".modal-textarea");return s.value=e,t.classList.add("visible"),s.focus(),new Promise(a=>t._resolve=a)}appendMessage(e,t,s){let a=document.createElement("div");a.className=`gpt-chat-message ${e}`;let r=document.createElement("div");r.className="meta",r.textContent=`${e==="user"?"You":e==="tool"?"\u{1F527} Tool":"GPT"} \u2022 ${s}`;let o=document.createElement("div");if(o.className="content",o.textContent=t,a.append(r,o),e==="user"){let n=document.createElement("div");n.className="msg-actions";let d=document.createElement("button");d.className="edit-msg-btn",d.textContent="\u270F\uFE0F",d.title="Edit message",d.addEventListener("click",async f=>{f.stopPropagation();let p=a.dataset.msgId;if(!p)return;let c=await this._edit(o.textContent);if(c!=null&&c.trim()!=="")try{await E(this.currentThreadId,p,{content:c}),o.textContent=c}catch(g){await this._confirm("Error editing: "+g.message)}});let h=document.createElement("button");h.className="delete-msg-btn",h.textContent="\u{1F5D1}\uFE0F",h.title="Delete message",h.addEventListener("click",async f=>{if(f.stopPropagation(),!!a.dataset.msgId&&await this._confirm("Delete this message?"))try{await _(this.currentThreadId,a.dataset.msgId),a.remove()}catch(p){await this._confirm("Error deleting: "+p.message)}}),n.append(d,h),a.append(n)}return this.chatMessages.appendChild(a),{wrap:a}}appendToolEntry(e){let t=new Date().toLocaleTimeString();if(e.type==="function_call"){let s=JSON.stringify(e.arguments);this.appendMessage("tool",`\u{1F6E0}\uFE0F ${e.name}(${s})`,t)}else e.type==="function_result"&&this.appendMessage("tool",`\u2705 ${e.name} \u2192 ${e.result}`,t);this.chatMessages.scrollTop=this.chatMessages.scrollHeight}async sendMessage(e){if(!e.trim())return;this.abortController=new AbortController,this.cancelBtn.disabled=!1;let t=document.createElement("div");t.className="typing-indicator",t.innerHTML="<span></span><span></span><span></span>",this.chatMessages.appendChild(t),this.chatMessages.scrollTop=this.chatMessages.scrollHeight;let s=new Date().toLocaleString(),{wrap:a}=this.appendMessage("user",e,s);this.chatMessages.scrollTop=this.chatMessages.scrollHeight,this.input.disabled=this.sendBtn.disabled=!0,this.input.value="";let{wrap:r}=this.appendMessage("assistant","\u2026","");this.chatMessages.scrollTop=this.chatMessages.scrollHeight;let o={prompt:e,threadId:this.currentThreadId,...this.currentThreadId?{}:{title:this.threadNameSidebar.value.trim()}},n;try{n=await T(o,this.abortController.signal)}catch(l){r.remove(),t.remove(),this.input.disabled=this.sendBtn.disabled=!1,this.cancelBtn.disabled=!0;let x=new Date().toLocaleString();l.name==="AbortError"?this.appendMessage("assistant","\u26A0\uFE0F Cancelled by user",x):this.appendMessage("assistant",`\u274C Network Error: ${l.message}`,x);return}let{error:d,errorMessage:h,logs:f,result:p,threadId:c,userMessageId:g,assistantMessageId:C}=n;if(f.forEach(l=>{l.type==="retry"?this.appendMessage("tool",`\u{1F504} Retry attempt ${l.attempt}: ${l.error}`,new Date().toLocaleTimeString()):this.appendToolEntry(l)}),this.input.disabled=this.sendBtn.disabled=!1,this.input.focus(),d){let l=new Date().toLocaleString();this.appendMessage("assistant",`\u274C Error: ${h}`,l),this.cancelBtn.disabled=!0;return}r.remove(),t.remove(),a.dataset.msgId=g;let L=new Date().toLocaleTimeString(),I=typeof p=="string"?p:S(p.content||[]),{wrap:N}=this.appendMessage("assistant",I,L);N.dataset.msgId=C,this.chatMessages.scrollTop=this.chatMessages.scrollHeight,this.cancelBtn.disabled=!0,this.threads.find(l=>l.id===c)||(this.threads.push({id:c,title:this.threadNameSidebar.value.trim()||c}),this._renderThreadList()),this.currentThreadId=c,this._highlightSelectedThread(),this._updateThreadNameSidebarVisibility();let j=this.threads.find(l=>l.id===c);this.chatTitleEl.textContent=j.title||"Untitled Chat"}_highlightSelectedThread(){this.threadList.querySelectorAll("li").forEach(e=>{e.classList.toggle("selected",e.dataset.id===this.currentThreadId)})}async _showFileTree(){try{let s=function(r){let o=document.createElement("li");if(Array.isArray(r.children)){let n=document.createElement("span");n.textContent=r.name,n.classList.add("file-node","collapsed"),n.onclick=()=>n.classList.toggle("collapsed"),o.append(n);let d=document.createElement("ul");r.children.forEach(h=>d.append(s(h))),o.append(d)}else{let n=document.createElement("span");n.textContent=r.name,n.classList.add("file-leaf");let d=r.name.match(/\.([^.]+)$/);d&&n.classList.add(d[1]),o.append(n)}return o},e=await M(),t=document.createElement("div");t.id="fileModal",t.innerHTML='<button class="close">\u2716</button>',t.querySelector(".close").onclick=()=>t.remove();let a=document.createElement("ul");e.forEach(r=>a.append(s(r))),t.append(a),document.body.append(t)}catch(e){console.error(e)}}};customElements.define("gpt-chat",y);document.body.append(document.createElement("gpt-chat"));})();
